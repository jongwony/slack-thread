#!/usr/bin/env bash

set -euo pipefail

REPO_OWNER="jongwony"
REPO_NAME="slack-thread"
BIN_NAME="slack-thread"
RAW_BASE="https://raw.githubusercontent.com/${REPO_OWNER}/${REPO_NAME}/main"

# Determine default install dir
if [ -d "/usr/local/bin" ] && [ -w "/usr/local/bin" ]; then
  INSTALL_DIR_DEFAULT="/usr/local/bin"
else
  INSTALL_DIR_DEFAULT="${HOME}/.local/bin"
fi

INSTALL_DIR="${INSTALL_DIR_DEFAULT}"
NO_SUDO=0
FORCE=0
INSTALL_UV=0

print_usage() {
  cat <<EOF
Installer for ${BIN_NAME}

Usage:
  curl -fsSL ${RAW_BASE}/install | bash -s -- [options]

Options:
  --to <dir>       Install directory (default: ${INSTALL_DIR_DEFAULT})
  --no-sudo        Do not use sudo even if privileges are required
  --force          Overwrite existing binary if present
  --install-uv     Install 'uv' if not found on PATH

Examples:
  curl -fsSL ${RAW_BASE}/install | bash
  curl -fsSL ${RAW_BASE}/install | bash -s -- --to ~/.local/bin --install-uv
EOF
}

log() { echo "[install] $*"; }
err() { echo "[install][error] $*" >&2; }

has_cmd() { command -v "$1" >/dev/null 2>&1; }

parse_args() {
  while [ $# -gt 0 ]; do
    case "$1" in
      --to)
        shift
        [ $# -gt 0 ] || { err "--to requires a directory"; exit 1; }
        INSTALL_DIR="$1"
        ;;
      --no-sudo)
        NO_SUDO=1
        ;;
      --force)
        FORCE=1
        ;;
      --install-uv)
        INSTALL_UV=1
        ;;
      -h|--help)
        print_usage
        exit 0
        ;;
      *)
        err "Unknown option: $1"
        print_usage
        exit 1
        ;;
    esac
    shift
  done
}

ensure_curl() {
  if ! has_cmd curl; then
    err "curl is required. Please install curl and retry."
    exit 1
  fi
}

dir_is_writable() {
  local dir="$1"
  if [ -d "$dir" ]; then
    [ -w "$dir" ]
  else
    local parent
    parent=$(dirname "$dir")
    [ -w "$parent" ]
  fi
}

maybe_sudo() {
  if [ "$NO_SUDO" -eq 0 ] && [ "$(id -u)" -ne 0 ]; then
    if has_cmd sudo; then
      sudo "$@"
    else
      err "sudo not available and elevated permissions required to write to ${INSTALL_DIR}."
      err "Re-run with --to \"${HOME}/.local/bin\" or ensure write access."
      exit 1
    fi
  else
    "$@"
  fi
}

ensure_install_dir() {
  if [ ! -d "$INSTALL_DIR" ]; then
    if dir_is_writable "$INSTALL_DIR"; then
      mkdir -p "$INSTALL_DIR"
    else
      maybe_sudo mkdir -p "$INSTALL_DIR"
    fi
  fi
}

download_binary() {
  local tmpfile
  tmpfile=$(mktemp)
  local url="${RAW_BASE}/${BIN_NAME}"
  log "Downloading ${BIN_NAME} from ${url}"
  if ! curl -fsSL "$url" -o "$tmpfile"; then
    rm -f "$tmpfile"
    err "Failed to download ${url}"
    exit 1
  fi

  # Basic sanity check
  if ! head -n 1 "$tmpfile" | grep -q "^#!"; then
    rm -f "$tmpfile"
    err "Downloaded file doesn't look like an executable script."
    exit 1
  fi

  echo "$tmpfile"
}

install_binary() {
  local src="$1"
  local dst="${INSTALL_DIR}/${BIN_NAME}"

  if [ -f "$dst" ] && [ "$FORCE" -ne 1 ]; then
    log "${dst} already exists. Use --force to overwrite. Skipping install."
    rm -f "$src"
    return 0
  fi

  if dir_is_writable "$INSTALL_DIR"; then
    mv "$src" "$dst"
    chmod +x "$dst"
  else
    maybe_sudo mv "$src" "$dst"
    maybe_sudo chmod +x "$dst"
  fi

  log "Installed ${BIN_NAME} to ${dst}"
}

ensure_path_note() {
  case ":$PATH:" in
    *":${INSTALL_DIR}:"*) ;;
    *)
      echo
      log "Note: ${INSTALL_DIR} is not on your PATH. Add this to your shell profile:"
      echo "  export PATH=\"${INSTALL_DIR}:\\$PATH\""
      ;;
  esac
}

maybe_install_uv() {
  if has_cmd uv; then
    return 0
  fi
  if [ "$INSTALL_UV" -eq 1 ]; then
    log "Installing uv (required to run ${BIN_NAME})"
    if ! curl -fsSL https://astral.sh/uv/install.sh | sh; then
      err "Failed to install uv via official installer."
      exit 1
    fi
    log "uv installed. You may need to restart your shell for PATH changes to take effect."
  else
    echo
    log "'uv' not found. ${BIN_NAME} uses uv to manage Python/runtime."
    log "Install it now by re-running with --install-uv, or install manually:"
    echo "  curl -fsSL https://astral.sh/uv/install.sh | sh"
  fi
}

main() {
  parse_args "$@"
  ensure_curl()
  ensure_install_dir
  tmp=$(download_binary)
  install_binary "$tmp"
  ensure_path_note
  maybe_install_uv
  echo
  log "Done. Try: ${BIN_NAME} --help"
}

main "$@"


